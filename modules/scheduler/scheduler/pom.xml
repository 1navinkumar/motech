<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>motech</artifactId>
        <groupId>org.motechproject</groupId>
        <version>0.20-SNAPSHOT</version>
        <relativePath>../../../</relativePath>
    </parent>

    <groupId>org.motechproject</groupId>
    <artifactId>motech-scheduler</artifactId>
    <version>0.20-SNAPSHOT</version>
    <packaging>bundle</packaging>

    <name>MOTECH Scheduler</name>

    <properties>
        <modules.root.dir>${basedir}/../../..</modules.root.dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-platform-server-config</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-platform-event</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>org.motechproject.org.quartz-scheduler</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.context.support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>com.springsource.org.apache.commons.lang</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-platform-osgi-web-util</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mysql.jdbc</groupId>
            <artifactId>com.springsource.com.mysql.jdbc</artifactId>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-testing-utils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.motechproject</groupId>
            <artifactId>motech-platform-osgi-extender-fragment</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>task-channel.json</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>task-channel.json</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.4</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Context-Path>scheduler</Context-Path>
                        <Resource-Path>scheduler/resources</Resource-Path>
                        <Blueprint-Enabled>true</Blueprint-Enabled>
                        <Export-Package>
                            org.motechproject.scheduler.*;version=${project.version}
                        </Export-Package>
                        <Import-Package>
                            javax.ejb;resolution:=optional,
                            javax.jms;resolution:=optional,
                            javax.mail;resolution:=optional,
                            javax.mail.internet;resolution:=optional,
                            javax.management;resolution:=optional,
                            javax.management.openmbean;resolution:=optional,
                            javax.naming;resolution:=optional,
                            javax.rmi;resolution:=optional,
                            javax.servlet;resolution:=optional,
                            javax.servlet.http;resolution:=optional,
                            javax.sql;resolution:=optional,
                            javax.xml.bind;resolution:=optional,
                            javax.xml.namespace;resolution:=optional,
                            org.quartz;version="0",
                            commonj.*;resolution:=optional,
                            freemarker.*;resolution:=optional,
                            net.sf.jasperreports.*;resolution:=optional,
                            org.apache.velocity.*;resolution:=optional,
                            org.springframework.jdbc.*;resolution:=optional,
                            *
                        </Import-Package>
                        <!-- Spring context support has optional import of Quartz. This gives runtime exception.
                        So embedding quartz related packages. Fragment bundle may also solve the problem. -->
                        <Private-Package>org.springframework.scheduling.quartz.*</Private-Package>
                        <Embed-Dependency>
                            org.springframework.context.support;inline=true
                        </Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-osgi-dependencies</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <outputDirectory>
                                ${user.home}/.motech/bundles
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>copy-bundles</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${user.home}/.motech/bundles</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>target</directory>
                                    <includes>
                                        <include>*.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.7</version>
                <configuration>
                    <finalName>${project.artifactId}</finalName>
                    <outputDirectory>${project.build.directory}/standalone</outputDirectory>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                    <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
                    <keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                                <exclude>META-INF/spring.handlers</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <manifestEntries>
                                <Main-Class>org.motechproject.scheduler.impl.MotechScheduler</Main-Class>
                            </manifestEntries>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                            <resource>META-INF/spring.handlers</resource>
                            <file>${basedir}/src/main/shade-config/spring.handlers</file>
                        </transformer>
                    </transformers>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
